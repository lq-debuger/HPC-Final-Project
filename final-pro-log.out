Sender: LSF System <lsfadmin@r01n31>
Subject: Job 3817518: <mytest> in cluster <sustchpc> Done

Job <mytest> was submitted from host <login03> by user <mae-liq1> in cluster <sustchpc> at Sun Jun  5 13:19:16 2022.
Job was executed on host(s) <1*r01n31>, in queue <ser>, as user <mae-liq1> in cluster <sustchpc> at Sun Jun  5 13:19:16 2022.
                            <4*r01n04>
</work/mae-liq1> was used as the home directory.
</work/mae-liq1/hpc/HPC-Final-Project> was used as the working directory.
Started at Sun Jun  5 13:19:16 2022.
Terminated at Sun Jun  5 13:19:29 2022.
Results reported at Sun Jun  5 13:19:29 2022.

Your job looked like:

------------------------------------------------------------
# LSBATCH: User input
#BSUB -J mytest
#BSUB -q ser
#BSUB -e final-pro-log.err
#BSUB -o final-pro-log.out

module purge
module load mpi/intel/2018.4

mpirun -np 1 ./final.out -restart 0 -log_view

#mpirun -np 2  ./final.out -ksp_type gmres -pc_type none -log_view

------------------------------------------------------------

Successfully completed.

Resource usage summary:

    CPU time :                                   1.47 sec.
    Max Memory :                                 23 MB
    Average Memory :                             23.00 MB
    Total Requested Memory :                     -
    Delta Memory :                               -
    Max Swap :                                   8 MB
    Max Processes :                              7
    Max Threads :                                9
    Run time :                                   12 sec.
    Turnaround time :                            13 sec.

The output (if any) follows:

Mat Object: 1 MPI processes
  type: seqaij
row 0: (0, 0.34464)  (1, 0.32768) 
row 1: (0, 0.32768)  (1, 0.34464)  (2, 0.32768) 
row 2: (1, 0.32768)  (2, 0.34464)  (3, 0.32768) 
row 3: (2, 0.32768)  (3, 0.34464)  (4, 0.32768) 
row 4: (3, 0.32768)  (4, 0.34464)  (5, 0.32768) 
row 5: (4, 0.32768)  (5, 0.34464)  (6, 0.32768) 
row 6: (5, 0.32768)  (6, 0.34464)  (7, 0.32768) 
row 7: (6, 0.32768)  (7, 0.34464)  (8, 0.32768) 
row 8: (7, 0.32768)  (8, 0.34464)  (9, 0.32768) 
row 9: (8, 0.32768)  (9, 0.34464)  (10, 0.32768) 
row 10: (9, 0.32768)  (10, 0.34464)  (11, 0.32768) 
row 11: (10, 0.32768)  (11, 0.34464)  (12, 0.32768) 
row 12: (11, 0.32768)  (12, 0.34464)  (13, 0.32768) 
row 13: (12, 0.32768)  (13, 0.34464)  (14, 0.32768) 
row 14: (13, 0.32768)  (14, 0.34464)  (15, 0.32768) 
row 15: (14, 0.32768)  (15, 0.34464)  (16, 0.32768) 
row 16: (15, 0.32768)  (16, 0.34464)  (17, 0.32768) 
row 17: (16, 0.32768)  (17, 0.34464)  (18, 0.32768) 
row 18: (17, 0.32768)  (18, 0.34464)  (19, 0.32768) 
row 19: (18, 0.32768)  (19, 0.34464)  (20, 0.32768) 
row 20: (19, 0.32768)  (20, 0.34464)  (21, 0.32768) 
row 21: (20, 0.32768)  (21, 0.34464)  (22, 0.32768) 
row 22: (21, 0.32768)  (22, 0.34464)  (23, 0.32768) 
row 23: (22, 0.32768)  (23, 0.34464)  (24, 0.32768) 
row 24: (23, 0.32768)  (24, 0.34464)  (25, 0.32768) 
row 25: (24, 0.32768)  (25, 0.34464)  (26, 0.32768) 
row 26: (25, 0.32768)  (26, 0.34464)  (27, 0.32768) 
row 27: (26, 0.32768)  (27, 0.34464)  (28, 0.32768) 
row 28: (27, 0.32768)  (28, 0.34464)  (29, 0.32768) 
row 29: (28, 0.32768)  (29, 0.34464)  (30, 0.32768) 
row 30: (29, 0.32768)  (30, 0.34464)  (31, 0.32768) 
row 31: (30, 0.32768)  (31, 0.34464)  (32, 0.32768) 
row 32: (31, 0.32768)  (32, 0.34464)  (33, 0.32768) 
row 33: (32, 0.32768)  (33, 0.34464)  (34, 0.32768) 
row 34: (33, 0.32768)  (34, 0.34464)  (35, 0.32768) 
row 35: (34, 0.32768)  (35, 0.34464)  (36, 0.32768) 
row 36: (35, 0.32768)  (36, 0.34464)  (37, 0.32768) 
row 37: (36, 0.32768)  (37, 0.34464)  (38, 0.32768) 
row 38: (37, 0.32768)  (38, 0.34464)  (39, 0.32768) 
row 39: (38, 0.32768)  (39, 0.34464)  (40, 0.32768) 
row 40: (39, 0.32768)  (40, 0.34464)  (41, 0.32768) 
row 41: (40, 0.32768)  (41, 0.34464)  (42, 0.32768) 
row 42: (41, 0.32768)  (42, 0.34464)  (43, 0.32768) 
row 43: (42, 0.32768)  (43, 0.34464)  (44, 0.32768) 
row 44: (43, 0.32768)  (44, 0.34464)  (45, 0.32768) 
row 45: (44, 0.32768)  (45, 0.34464)  (46, 0.32768) 
row 46: (45, 0.32768)  (46, 0.34464)  (47, 0.32768) 
row 47: (46, 0.32768)  (47, 0.34464)  (48, 0.32768) 
row 48: (47, 0.32768)  (48, 0.34464)  (49, 0.32768) 
row 49: (48, 0.32768)  (49, 0.34464)  (50, 0.32768) 
row 50: (49, 0.32768)  (50, 0.34464)  (51, 0.32768) 
row 51: (50, 0.32768)  (51, 0.34464)  (52, 0.32768) 
row 52: (51, 0.32768)  (52, 0.34464)  (53, 0.32768) 
row 53: (52, 0.32768)  (53, 0.34464)  (54, 0.32768) 
row 54: (53, 0.32768)  (54, 0.34464)  (55, 0.32768) 
row 55: (54, 0.32768)  (55, 0.34464)  (56, 0.32768) 
row 56: (55, 0.32768)  (56, 0.34464)  (57, 0.32768) 
row 57: (56, 0.32768)  (57, 0.34464)  (58, 0.32768) 
row 58: (57, 0.32768)  (58, 0.34464)  (59, 0.32768) 
row 59: (58, 0.32768)  (59, 0.34464)  (60, 0.32768) 
row 60: (59, 0.32768)  (60, 0.34464)  (61, 0.32768) 
row 61: (60, 0.32768)  (61, 0.34464)  (62, 0.32768) 
row 62: (61, 0.32768)  (62, 0.34464)  (63, 0.32768) 
row 63: (62, 0.32768)  (63, 0.34464)  (64, 0.32768) 
row 64: (63, 0.32768)  (64, 0.34464)  (65, 0.32768) 
row 65: (64, 0.32768)  (65, 0.34464)  (66, 0.32768) 
row 66: (65, 0.32768)  (66, 0.34464)  (67, 0.32768) 
row 67: (66, 0.32768)  (67, 0.34464)  (68, 0.32768) 
row 68: (67, 0.32768)  (68, 0.34464)  (69, 0.32768) 
row 69: (68, 0.32768)  (69, 0.34464)  (70, 0.32768) 
row 70: (69, 0.32768)  (70, 0.34464)  (71, 0.32768) 
row 71: (70, 0.32768)  (71, 0.34464)  (72, 0.32768) 
row 72: (71, 0.32768)  (72, 0.34464)  (73, 0.32768) 
row 73: (72, 0.32768)  (73, 0.34464)  (74, 0.32768) 
row 74: (73, 0.32768)  (74, 0.34464)  (75, 0.32768) 
row 75: (74, 0.32768)  (75, 0.34464)  (76, 0.32768) 
row 76: (75, 0.32768)  (76, 0.34464)  (77, 0.32768) 
row 77: (76, 0.32768)  (77, 0.34464)  (78, 0.32768) 
row 78: (77, 0.32768)  (78, 0.34464)  (79, 0.32768) 
row 79: (78, 0.32768)  (79, 0.34464)  (80, 0.32768) 
row 80: (79, 0.32768)  (80, 0.34464)  (81, 0.32768) 
row 81: (80, 0.32768)  (81, 0.34464)  (82, 0.32768) 
row 82: (81, 0.32768)  (82, 0.34464)  (83, 0.32768) 
row 83: (82, 0.32768)  (83, 0.34464)  (84, 0.32768) 
row 84: (83, 0.32768)  (84, 0.34464)  (85, 0.32768) 
row 85: (84, 0.32768)  (85, 0.34464)  (86, 0.32768) 
row 86: (85, 0.32768)  (86, 0.34464)  (87, 0.32768) 
row 87: (86, 0.32768)  (87, 0.34464)  (88, 0.32768) 
row 88: (87, 0.32768)  (88, 0.34464)  (89, 0.32768) 
row 89: (88, 0.32768)  (89, 0.34464)  (90, 0.32768) 
row 90: (89, 0.32768)  (90, 0.34464)  (91, 0.32768) 
row 91: (90, 0.32768)  (91, 0.34464)  (92, 0.32768) 
row 92: (91, 0.32768)  (92, 0.34464)  (93, 0.32768) 
row 93: (92, 0.32768)  (93, 0.34464)  (94, 0.32768) 
row 94: (93, 0.32768)  (94, 0.34464)  (95, 0.32768) 
row 95: (94, 0.32768)  (95, 0.34464)  (96, 0.32768) 
row 96: (95, 0.32768)  (96, 0.34464)  (97, 0.32768) 
row 97: (96, 0.32768)  (97, 0.34464)  (98, 0.32768) 
row 98: (97, 0.32768)  (98, 0.34464)  (99, 0.32768) 
row 99: (98, 0.32768)  (99, 0.34464)  (100, 0.32768) 
row 100: (99, 0.32768)  (100, 0.34464)  (101, 0.32768) 
row 101: (100, 0.32768)  (101, 0.34464)  (102, 0.32768) 
row 102: (101, 0.32768)  (102, 0.34464)  (103, 0.32768) 
row 103: (102, 0.32768)  (103, 0.34464)  (104, 0.32768) 
row 104: (103, 0.32768)  (104, 0.34464)  (105, 0.32768) 
row 105: (104, 0.32768)  (105, 0.34464)  (106, 0.32768) 
row 106: (105, 0.32768)  (106, 0.34464)  (107, 0.32768) 
row 107: (106, 0.32768)  (107, 0.34464)  (108, 0.32768) 
row 108: (107, 0.32768)  (108, 0.34464)  (109, 0.32768) 
row 109: (108, 0.32768)  (109, 0.34464)  (110, 0.32768) 
row 110: (109, 0.32768)  (110, 0.34464)  (111, 0.32768) 
row 111: (110, 0.32768)  (111, 0.34464)  (112, 0.32768) 
row 112: (111, 0.32768)  (112, 0.34464)  (113, 0.32768) 
row 113: (112, 0.32768)  (113, 0.34464)  (114, 0.32768) 
row 114: (113, 0.32768)  (114, 0.34464)  (115, 0.32768) 
row 115: (114, 0.32768)  (115, 0.34464)  (116, 0.32768) 
row 116: (115, 0.32768)  (116, 0.34464)  (117, 0.32768) 
row 117: (116, 0.32768)  (117, 0.34464)  (118, 0.32768) 
row 118: (117, 0.32768)  (118, 0.34464)  (119, 0.32768) 
row 119: (118, 0.32768)  (119, 0.34464)  (120, 0.32768) 
row 120: (119, 0.32768)  (120, 0.34464)  (121, 0.32768) 
row 121: (120, 0.32768)  (121, 0.34464)  (122, 0.32768) 
row 122: (121, 0.32768)  (122, 0.34464)  (123, 0.32768) 
row 123: (122, 0.32768)  (123, 0.34464)  (124, 0.32768) 
row 124: (123, 0.32768)  (124, 0.34464)  (125, 0.32768) 
row 125: (124, 0.32768)  (125, 0.34464)  (126, 0.32768) 
row 126: (125, 0.32768)  (126, 0.34464)  (127, 0.32768) 
row 127: (126, 0.32768)  (127, 0.34464) 
Do not read u_old from uold.h5 ...
It's explicit scheme
---------------------
Vec Object: 1 MPI processes
  type: seq
0.
0.00246932
0.00493715
0.00740197
0.00986231
0.0123166
0.0147635
0.0172014
0.0196289
0.0220444
0.0244466
0.0268339
0.0292049
0.0315582
0.0338923
0.0362058
0.0384974
0.0407656
0.043009
0.0452263
0.0474161
0.0495772
0.0517081
0.0538076
0.0558744
0.0579073
0.059905
0.0618664
0.0637901
0.0656751
0.0675202
0.0693242
0.0710861
0.0728049
0.0744794
0.0761086
0.0776915
0.0792273
0.0807149
0.0821534
0.0835419
0.0848797
0.0861659
0.0873996
0.0885802
0.0897069
0.0907791
0.091796
0.0927571
0.0936618
0.0945094
0.0952995
0.0960316
0.0967053
0.0973201
0.0978756
0.0983715
0.0988075
0.0991833
0.0994987
0.0997535
0.0999474
0.10008
0.100152
0.100163
0.100113
0.100002
0.0998298
0.0995966
0.0993026
0.098948
0.098533
0.0980578
0.0975227
0.0969279
0.0962739
0.0955611
0.0947897
0.0939604
0.0930735
0.0921297
0.0911294
0.0900733
0.0889619
0.087796
0.0865761
0.0853032
0.0839778
0.0826008
0.0811731
0.0796954
0.0781686
0.0765936
0.0749715
0.073303
0.0715894
0.0698314
0.0680303
0.066187
0.0643028
0.0623786
0.0604157
0.0584151
0.0563782
0.0543061
0.0522001
0.0500614
0.0478913
0.0456911
0.0434621
0.0412056
0.038923
0.0366156
0.0342849
0.0319322
0.0295589
0.0271664
0.0247562
0.0223298
0.0198884
0.0174337
0.0149671
0.01249
0.010004
0.00751047
0.00501097
0.00250699
0.
The program is finished
************************************************************************************************************************
***             WIDEN YOUR WINDOW TO 120 CHARACTERS.  Use 'enscript -r -fCourier9' to print this document            ***
************************************************************************************************************************

---------------------------------------------- PETSc Performance Summary: ----------------------------------------------

./final.out on a  named r01n31 with 1 processor, by mae-liq1 Sun Jun  5 13:19:28 2022
Using Petsc Release Version 3.16.6, Mar 30, 2022 

                         Max       Max/Min     Avg       Total
Time (sec):           1.187e+01     1.000   1.187e+01
Objects:              7.000e+00     1.000   7.000e+00
Flop:                 4.460e+07     1.000   4.460e+07  4.460e+07
Flop/sec:             3.756e+06     1.000   3.756e+06  3.756e+06
MPI Messages:         0.000e+00     0.000   0.000e+00  0.000e+00
MPI Message Lengths:  0.000e+00     0.000   0.000e+00  0.000e+00
MPI Reductions:       0.000e+00     0.000

Flop counting convention: 1 flop = 1 real number operation of type (multiply/divide/add/subtract)
                            e.g., VecAXPY() for real vectors of length N --> 2N flop
                            and VecAXPY() for complex vectors of length N --> 8N flop

Summary of Stages:   ----- Time ------  ----- Flop ------  --- Messages ---  -- Message Lengths --  -- Reductions --
                        Avg     %Total     Avg     %Total    Count   %Total     Avg         %Total    Count   %Total
 0:      Main Stage: 1.1874e+01 100.0%  4.4599e+07 100.0%  0.000e+00   0.0%  0.000e+00        0.0%  0.000e+00   0.0%

------------------------------------------------------------------------------------------------------------------------
See the 'Profiling' chapter of the users' manual for details on interpreting output.
Phase summary info:
   Count: number of times phase was executed
   Time and Flop: Max - maximum over all processors
                  Ratio - ratio of maximum to minimum over all processors
   Mess: number of messages sent
   AvgLen: average message length (bytes)
   Reduct: number of global reductions
   Global: entire computation
   Stage: stages of a computation. Set stages with PetscLogStagePush() and PetscLogStagePop().
      %T - percent time in this phase         %F - percent flop in this phase
      %M - percent messages in this phase     %L - percent message lengths in this phase
      %R - percent reductions in this phase
   Total Mflop/s: 10e-6 * (sum of flop over all processors)/(max time over all processors)
------------------------------------------------------------------------------------------------------------------------
Event                Count      Time (sec)     Flop                              --- Global ---  --- Stage ----  Total
                   Max Ratio  Max     Ratio   Max  Ratio  Mess   AvgLen  Reduct  %T %F %M %L %R  %T %F %M %L %R Mflop/s
------------------------------------------------------------------------------------------------------------------------

--- Event Stage 0: Main Stage

VecView             5000 1.0 1.1768e+01 1.0 0.00e+00 0.0 0.0e+00 0.0e+00 0.0e+00 99  0  0  0  0  99  0  0  0  0     0
VecCopy            49999 1.0 5.8248e-03 1.0 0.00e+00 0.0 0.0e+00 0.0e+00 0.0e+00  0  0  0  0  0   0  0  0  0  0     0
VecSet                 3 1.0 2.1935e-05 1.0 0.00e+00 0.0 0.0e+00 0.0e+00 0.0e+00  0  0  0  0  0   0  0  0  0  0     0
VecAXPY            49999 1.0 1.3632e-02 1.0 1.28e+07 1.0 0.0e+00 0.0e+00 0.0e+00  0 29  0  0  0   0 29  0  0  0   939
VecAssemblyBegin   50001 1.0 2.7890e-03 1.0 0.00e+00 0.0 0.0e+00 0.0e+00 0.0e+00  0  0  0  0  0   0  0  0  0  0     0
VecAssemblyEnd     50001 1.0 2.6031e-03 1.0 0.00e+00 0.0 0.0e+00 0.0e+00 0.0e+00  0  0  0  0  0   0  0  0  0  0     0
MatMult            49999 1.0 2.8369e-02 1.0 3.18e+07 1.0 0.0e+00 0.0e+00 0.0e+00  0 71  0  0  0   0 71  0  0  0  1121
MatAssemblyBegin       1 1.0 0.0000e+00 0.0 0.00e+00 0.0 0.0e+00 0.0e+00 0.0e+00  0  0  0  0  0   0  0  0  0  0     0
MatAssemblyEnd         1 1.0 5.7936e-05 1.0 0.00e+00 0.0 0.0e+00 0.0e+00 0.0e+00  0  0  0  0  0   0  0  0  0  0     0
MatView                1 1.0 9.6107e-04 1.0 0.00e+00 0.0 0.0e+00 0.0e+00 0.0e+00  0  0  0  0  0   0  0  0  0  0     0
------------------------------------------------------------------------------------------------------------------------

Memory usage is given in bytes:

Object Type          Creations   Destructions     Memory  Descendants' Mem.
Reports information only for process 0.

--- Event Stage 0: Main Stage

              Vector     3              3         7944     0.
              Matrix     1              1        13516     0.
              Viewer     3              2         1648     0.
========================================================================================================================
Average time to get PetscTime(): 0.
#PETSc Option Table entries:
-log_view
-restart 0
#End of PETSc Option Table entries
Compiled without FORTRAN kernels
Compiled with full precision matrices (default)
sizeof(short) 2 sizeof(int) 4 sizeof(long) 8 sizeof(void*) 8 sizeof(PetscScalar) 8 sizeof(PetscInt) 4
Configure options: --prefix=/work/mae-liq1/lib/petsc-3.16.6 --with-blaslapack-dir=/share/intel/2018u4/compilers_and_libraries_2018.5.274/linux/mkl --with-debugging=no --download-hypre --download-metis --download-hdf5=/work/mae-liq1/software/hdf5-1.12.1.tar.gz --with-mpi-dir=/share/intel/2018u4/compilers_and_libraries_2018.5.274/linux/mpi/intel64 COPTFLAGS="-O3 -march=native -mtune=native" CXXPTFLAGS="-O3 -march=native -mtune=native" FOPTFLAGS="-O3 -march=native -mtune=native"
-----------------------------------------
Libraries compiled on 2022-05-03 14:18:39 on login03 
Machine characteristics: Linux-3.10.0-862.el7.x86_64-x86_64-with-redhat-7.5-Maipo
Using PETSc directory: /work/mae-liq1/lib/petsc-3.16.6
Using PETSc arch: 
-----------------------------------------

Using C compiler: /share/intel/2018u4/compilers_and_libraries_2018.5.274/linux/mpi/intel64/bin/mpicc  -fPIC -Wall -Wwrite-strings -Wno-strict-aliasing -Wno-unknown-pragmas -fstack-protector -fvisibility=hidden -O3 -march=native -mtune=native  -std=c99 
Using Fortran compiler: /share/intel/2018u4/compilers_and_libraries_2018.5.274/linux/mpi/intel64/bin/mpif90  -fPIC -Wall -ffree-line-length-0 -Wno-unused-dummy-argument -O3 -march=native -mtune=native     -std=c99
-----------------------------------------

Using include paths: -I/work/mae-liq1/lib/petsc-3.16.6/include -I/share/intel/2018u4/compilers_and_libraries_2018.5.274/linux/mkl/include -I/share/intel/2018u4/compilers_and_libraries_2018.5.274/linux/mpi/intel64/include
-----------------------------------------

Using C linker: /share/intel/2018u4/compilers_and_libraries_2018.5.274/linux/mpi/intel64/bin/mpicc
Using Fortran linker: /share/intel/2018u4/compilers_and_libraries_2018.5.274/linux/mpi/intel64/bin/mpif90
Using libraries: -Wl,-rpath,/work/mae-liq1/lib/petsc-3.16.6/lib -L/work/mae-liq1/lib/petsc-3.16.6/lib -lpetsc -Wl,-rpath,/work/mae-liq1/lib/petsc-3.16.6/lib -L/work/mae-liq1/lib/petsc-3.16.6/lib -Wl,-rpath,/share/intel/2018u4/compilers_and_libraries_2018.5.274/linux/mkl/lib/intel64 -L/share/intel/2018u4/compilers_and_libraries_2018.5.274/linux/mkl/lib/intel64 -Wl,-rpath,/share/intel/2018u4/compilers_and_libraries_2018.5.274/linux/mpi/intel64/lib/release_mt -L/share/intel/2018u4/compilers_and_libraries_2018.5.274/linux/mpi/intel64/lib/release_mt -Wl,-rpath,/share/intel/2018u4/compilers_and_libraries_2018.5.274/linux/mpi/intel64/lib -L/share/intel/2018u4/compilers_and_libraries_2018.5.274/linux/mpi/intel64/lib -Wl,-rpath,/usr/lib/gcc/x86_64-redhat-linux/4.8.5 -L/usr/lib/gcc/x86_64-redhat-linux/4.8.5 -Wl,-rpath,/opt/intel/mpi-rt/2017.0.0/intel64/lib/release_mt -Wl,-rpath,/opt/intel/mpi-rt/2017.0.0/intel64/lib -lHYPRE -lmkl_intel_lp64 -lmkl_core -lmkl_sequential -lpthread -lhdf5_hl -lhdf5 -lmetis -lm -lX11 -lstdc++ -ldl -lmpifort -lmpi -lmpigi -lrt -lpthread -lgfortran -lm -lgfortran -lm -lgcc_s -lquadmath -lstdc++ -ldl
-----------------------------------------



PS:

Read file <final-pro-log.err> for stderr output of this job.

Sender: LSF System <lsfadmin@r01n31>
Subject: Job 3817520: <mytest> in cluster <sustchpc> Exited

Job <mytest> was submitted from host <login03> by user <mae-liq1> in cluster <sustchpc> at Sun Jun  5 13:20:44 2022.
Job was executed on host(s) <1*r01n31>, in queue <ser>, as user <mae-liq1> in cluster <sustchpc> at Sun Jun  5 13:20:45 2022.
                            <4*r01n04>
</work/mae-liq1> was used as the home directory.
</work/mae-liq1/hpc/HPC-Final-Project> was used as the working directory.
Started at Sun Jun  5 13:20:45 2022.
Terminated at Sun Jun  5 13:27:15 2022.
Results reported at Sun Jun  5 13:27:15 2022.

Your job looked like:

------------------------------------------------------------
# LSBATCH: User input
#BSUB -J mytest
#BSUB -q ser
#BSUB -e final-pro-log.err
#BSUB -o final-pro-log.out

module purge
module load mpi/intel/2018.4

mpirun -np 2 ./final.out -restart 0 -log_view

#mpirun -np 2  ./final.out -ksp_type gmres -pc_type none -log_view

------------------------------------------------------------

TERM_OWNER: job killed by owner.
Exited with signal termination: 9.

Resource usage summary:

    CPU time :                                   740.00 sec.
    Max Memory :                                 77 MB
    Average Memory :                             65.83 MB
    Total Requested Memory :                     -
    Delta Memory :                               -
    Max Swap :                                   8 MB
    Max Processes :                              11
    Max Threads :                                15
    Run time :                                   390 sec.
    Turnaround time :                            391 sec.

The output (if any) follows:

Mat Object: 2 MPI processes
  type: mpiaij
row 0: (0, 0.34464)  (1, 0.32768) 
row 1: (0, 0.32768)  (1, 0.34464)  (2, 0.32768) 
row 2: (1, 0.32768)  (2, 0.34464)  (3, 0.32768) 
row 3: (2, 0.32768)  (3, 0.34464)  (4, 0.32768) 
row 4: (3, 0.32768)  (4, 0.34464)  (5, 0.32768) 
row 5: (4, 0.32768)  (5, 0.34464)  (6, 0.32768) 
row 6: (5, 0.32768)  (6, 0.34464)  (7, 0.32768) 
row 7: (6, 0.32768)  (7, 0.34464)  (8, 0.32768) 
row 8: (7, 0.32768)  (8, 0.34464)  (9, 0.32768) 
row 9: (8, 0.32768)  (9, 0.34464)  (10, 0.32768) 
row 10: (9, 0.32768)  (10, 0.34464)  (11, 0.32768) 
row 11: (10, 0.32768)  (11, 0.34464)  (12, 0.32768) 
row 12: (11, 0.32768)  (12, 0.34464)  (13, 0.32768) 
row 13: (12, 0.32768)  (13, 0.34464)  (14, 0.32768) 
row 14: (13, 0.32768)  (14, 0.34464)  (15, 0.32768) 
row 15: (14, 0.32768)  (15, 0.34464)  (16, 0.32768) 
row 16: (15, 0.32768)  (16, 0.34464)  (17, 0.32768) 
row 17: (16, 0.32768)  (17, 0.34464)  (18, 0.32768) 
row 18: (17, 0.32768)  (18, 0.34464)  (19, 0.32768) 
row 19: (18, 0.32768)  (19, 0.34464)  (20, 0.32768) 
row 20: (19, 0.32768)  (20, 0.34464)  (21, 0.32768) 
row 21: (20, 0.32768)  (21, 0.34464)  (22, 0.32768) 
row 22: (21, 0.32768)  (22, 0.34464)  (23, 0.32768) 
row 23: (22, 0.32768)  (23, 0.34464)  (24, 0.32768) 
row 24: (23, 0.32768)  (24, 0.34464)  (25, 0.32768) 
row 25: (24, 0.32768)  (25, 0.34464)  (26, 0.32768) 
row 26: (25, 0.32768)  (26, 0.34464)  (27, 0.32768) 
row 27: (26, 0.32768)  (27, 0.34464)  (28, 0.32768) 
row 28: (27, 0.32768)  (28, 0.34464)  (29, 0.32768) 
row 29: (28, 0.32768)  (29, 0.34464)  (30, 0.32768) 
row 30: (29, 0.32768)  (30, 0.34464)  (31, 0.32768) 
row 31: (30, 0.32768)  (31, 0.34464)  (32, 0.32768) 
row 32: (31, 0.32768)  (32, 0.34464)  (33, 0.32768) 
row 33: (32, 0.32768)  (33, 0.34464)  (34, 0.32768) 
row 34: (33, 0.32768)  (34, 0.34464)  (35, 0.32768) 
row 35: (34, 0.32768)  (35, 0.34464)  (36, 0.32768) 
row 36: (35, 0.32768)  (36, 0.34464)  (37, 0.32768) 
row 37: (36, 0.32768)  (37, 0.34464)  (38, 0.32768) 
row 38: (37, 0.32768)  (38, 0.34464)  (39, 0.32768) 
row 39: (38, 0.32768)  (39, 0.34464)  (40, 0.32768) 
row 40: (39, 0.32768)  (40, 0.34464)  (41, 0.32768) 
row 41: (40, 0.32768)  (41, 0.34464)  (42, 0.32768) 
row 42: (41, 0.32768)  (42, 0.34464)  (43, 0.32768) 
row 43: (42, 0.32768)  (43, 0.34464)  (44, 0.32768) 
row 44: (43, 0.32768)  (44, 0.34464)  (45, 0.32768) 
row 45: (44, 0.32768)  (45, 0.34464)  (46, 0.32768) 
row 46: (45, 0.32768)  (46, 0.34464)  (47, 0.32768) 
row 47: (46, 0.32768)  (47, 0.34464)  (48, 0.32768) 
row 48: (47, 0.32768)  (48, 0.34464)  (49, 0.32768) 
row 49: (48, 0.32768)  (49, 0.34464)  (50, 0.32768) 
row 50: (49, 0.32768)  (50, 0.34464)  (51, 0.32768) 
row 51: (50, 0.32768)  (51, 0.34464)  (52, 0.32768) 
row 52: (51, 0.32768)  (52, 0.34464)  (53, 0.32768) 
row 53: (52, 0.32768)  (53, 0.34464)  (54, 0.32768) 
row 54: (53, 0.32768)  (54, 0.34464)  (55, 0.32768) 
row 55: (54, 0.32768)  (55, 0.34464)  (56, 0.32768) 
row 56: (55, 0.32768)  (56, 0.34464)  (57, 0.32768) 
row 57: (56, 0.32768)  (57, 0.34464)  (58, 0.32768) 
row 58: (57, 0.32768)  (58, 0.34464)  (59, 0.32768) 
row 59: (58, 0.32768)  (59, 0.34464)  (60, 0.32768) 
row 60: (59, 0.32768)  (60, 0.34464)  (61, 0.32768) 
row 61: (60, 0.32768)  (61, 0.34464)  (62, 0.32768) 
row 62: (61, 0.32768)  (62, 0.34464)  (63, 0.32768) 
row 63: (62, 0.32768)  (63, 0.34464)  (64, 0.32768) 
row 64: (63, 0.32768)  (64, 0.34464)  (65, 0.32768) 
row 65: (64, 0.32768)  (65, 0.34464)  (66, 0.32768) 
row 66: (65, 0.32768)  (66, 0.34464)  (67, 0.32768) 
row 67: (66, 0.32768)  (67, 0.34464)  (68, 0.32768) 
row 68: (67, 0.32768)  (68, 0.34464)  (69, 0.32768) 
row 69: (68, 0.32768)  (69, 0.34464)  (70, 0.32768) 
row 70: (69, 0.32768)  (70, 0.34464)  (71, 0.32768) 
row 71: (70, 0.32768)  (71, 0.34464)  (72, 0.32768) 
row 72: (71, 0.32768)  (72, 0.34464)  (73, 0.32768) 
row 73: (72, 0.32768)  (73, 0.34464)  (74, 0.32768) 
row 74: (73, 0.32768)  (74, 0.34464)  (75, 0.32768) 
row 75: (74, 0.32768)  (75, 0.34464)  (76, 0.32768) 
row 76: (75, 0.32768)  (76, 0.34464)  (77, 0.32768) 
row 77: (76, 0.32768)  (77, 0.34464)  (78, 0.32768) 
row 78: (77, 0.32768)  (78, 0.34464)  (79, 0.32768) 
row 79: (78, 0.32768)  (79, 0.34464)  (80, 0.32768) 
row 80: (79, 0.32768)  (80, 0.34464)  (81, 0.32768) 
row 81: (80, 0.32768)  (81, 0.34464)  (82, 0.32768) 
row 82: (81, 0.32768)  (82, 0.34464)  (83, 0.32768) 
row 83: (82, 0.32768)  (83, 0.34464)  (84, 0.32768) 
row 84: (83, 0.32768)  (84, 0.34464)  (85, 0.32768) 
row 85: (84, 0.32768)  (85, 0.34464)  (86, 0.32768) 
row 86: (85, 0.32768)  (86, 0.34464)  (87, 0.32768) 
row 87: (86, 0.32768)  (87, 0.34464)  (88, 0.32768) 
row 88: (87, 0.32768)  (88, 0.34464)  (89, 0.32768) 
row 89: (88, 0.32768)  (89, 0.34464)  (90, 0.32768) 
row 90: (89, 0.32768)  (90, 0.34464)  (91, 0.32768) 
row 91: (90, 0.32768)  (91, 0.34464)  (92, 0.32768) 
row 92: (91, 0.32768)  (92, 0.34464)  (93, 0.32768) 
row 93: (92, 0.32768)  (93, 0.34464)  (94, 0.32768) 
row 94: (93, 0.32768)  (94, 0.34464)  (95, 0.32768) 
row 95: (94, 0.32768)  (95, 0.34464)  (96, 0.32768) 
row 96: (95, 0.32768)  (96, 0.34464)  (97, 0.32768) 
row 97: (96, 0.32768)  (97, 0.34464)  (98, 0.32768) 
row 98: (97, 0.32768)  (98, 0.34464)  (99, 0.32768) 
row 99: (98, 0.32768)  (99, 0.34464)  (100, 0.32768) 
row 100: (99, 0.32768)  (100, 0.34464)  (101, 0.32768) 
row 101: (100, 0.32768)  (101, 0.34464)  (102, 0.32768) 
row 102: (101, 0.32768)  (102, 0.34464)  (103, 0.32768) 
row 103: (102, 0.32768)  (103, 0.34464)  (104, 0.32768) 
row 104: (103, 0.32768)  (104, 0.34464)  (105, 0.32768) 
row 105: (104, 0.32768)  (105, 0.34464)  (106, 0.32768) 
row 106: (105, 0.32768)  (106, 0.34464)  (107, 0.32768) 
row 107: (106, 0.32768)  (107, 0.34464)  (108, 0.32768) 
row 108: (107, 0.32768)  (108, 0.34464)  (109, 0.32768) 
row 109: (108, 0.32768)  (109, 0.34464)  (110, 0.32768) 
row 110: (109, 0.32768)  (110, 0.34464)  (111, 0.32768) 
row 111: (110, 0.32768)  (111, 0.34464)  (112, 0.32768) 
row 112: (111, 0.32768)  (112, 0.34464)  (113, 0.32768) 
row 113: (112, 0.32768)  (113, 0.34464)  (114, 0.32768) 
row 114: (113, 0.32768)  (114, 0.34464)  (115, 0.32768) 
row 115: (114, 0.32768)  (115, 0.34464)  (116, 0.32768) 
row 116: (115, 0.32768)  (116, 0.34464)  (117, 0.32768) 
row 117: (116, 0.32768)  (117, 0.34464)  (118, 0.32768) 
row 118: (117, 0.32768)  (118, 0.34464)  (119, 0.32768) 
row 119: (118, 0.32768)  (119, 0.34464)  (120, 0.32768) 
row 120: (119, 0.32768)  (120, 0.34464)  (121, 0.32768) 
row 121: (120, 0.32768)  (121, 0.34464)  (122, 0.32768) 
row 122: (121, 0.32768)  (122, 0.34464)  (123, 0.32768) 
row 123: (122, 0.32768)  (123, 0.34464)  (124, 0.32768) 
row 124: (123, 0.32768)  (124, 0.34464)  (125, 0.32768) 
row 125: (124, 0.32768)  (125, 0.34464)  (126, 0.32768) 
row 126: (125, 0.32768)  (126, 0.34464)  (127, 0.32768) 
row 127: (126, 0.32768)  (127, 0.34464) 
Do not read u_old from uold.h5 ...
It's explicit scheme


PS:

Read file <final-pro-log.err> for stderr output of this job.

